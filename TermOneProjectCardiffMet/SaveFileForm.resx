<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ek9zFEX/Az+XpDVZPYUUAAAAAElFTkSuQmCC
</value>
  </data>
</root>